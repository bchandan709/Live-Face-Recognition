import pandas as pd
import cv2 as cv
import numpy as np
import matplotlib
import os

folder=list()
for i in os.listdir(r'C:\Users\Bhushan Chandan\Face Train'):
    folder.append(i)
DIR = r'C:\Users\Bhushan Chandan\Face Train'

features = list()
labels = list()

def create_train():
    for person in folder:
        path = os.path.join(DIR,person)
        label = folder.index(person)
        
        for img in os.listdir(path):
            img_path = os.path.join(path,img)
            
            img_array = cv.imread(img_path)
            grey = cv.cvtColor(img_array,cv.COLOR_BGR2GRAY)
            
            haar_cascade = cv.CascadeClassifier('haarcascade_frontalface_default.xml')
            
            face_react = haar_cascade.detectMultiScale(grey , scaleFactor=1.1, minNeighbors=4)
            
            for (x,y,w,h) in face_react:
                face_data = grey[y:y+h, x:x+w]
                features.append(face_data)
                labels.append(label)
                
create_train()
features = np.array(features,dtype='object')
labels = np.array(labels)

face_recognizer = cv.face.LBPHFaceRecognizer_create()
face_recognizer.train(features,labels)


def resized(frame,scale=1.5):
    height = int(frame.shape[0]*scale)
    width = int(frame.shape[1]*scale)
    
    dimensions = (width,height)
    
    return cv.resize(frame,dimensions,interpolation=cv.INTER_AREA)

capture = cv.VideoCapture(0)
haar_cascade = cv.CascadeClassifier('haarcascade_frontalface_default.xml')

while True:
    isTrue, frame = capture.read()
    frame = resized(frame)
    grey = cv.cvtColor(frame,cv.COLOR_BGR2GRAY)
    face=haar_cascade.detectMultiScale(grey,1.1,10)
    for (x,y,w,h) in face:
        img_arr=grey[y:y+h,x:x+w]
        label , confidence= face_recognizer.predict(img_arr)
        cv.putText(frame,str(folder[label]),(x,y),cv.FONT_HERSHEY_TRIPLEX,1,(255,255,255),thickness=2)
        cv.rectangle(frame,(x,y),(x+w,y+h),(0,255,0),thickness=2)
        
    cv.imshow('Face',frame)
    
    if cv.waitKey(20) and 0xFF==ord('d'):
        break
    
capture.release()
cv.destroyAllWindows()
cv.waitKey(0)
